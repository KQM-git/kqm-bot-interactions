# override permissions for any command
permissions:
  liveinteraction:
    whitelist: ${ [ ROLES.PILLAR_STAFF, ...getValuesRecursive(ROLES.ADMIN) ] }

  livecommand:
    whitelist: ${ [ ROLES.PILLAR_STAFF, ...getValuesRecursive(ROLES.ADMIN) ] }
#   # Its possible to set permissions for internal commands too.

  role:
    whitelist: >-
      ${ [ 
        ...getValuesRecursive(ROLES.ADMIN), 
        ...getValuesRecursive(ROLES.EMISSARY), 
        ROLES.PILLAR_HEAD, 
        ROLES.PILLAR_VICE_HEAD, 
        ROLES.TRADE_HEAD 
      ] }

  serverinfo:
    whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN) ] }

  # point system
  points/add:
    whitelist: >-
      ${ [ 
          ...getValuesRecursive(ROLES.ADMIN), 
          ROLES.PILLAR_HEAD, 
          ROLES.PILLAR_VICE_HEAD 
        ] }

  points/list:
    whitelist: >-
      ${ [ 
          ...getValuesRecursive(ROLES.ADMIN), 
          ROLES.PILLAR_HEAD, 
          ROLES.PILLAR_VICE_HEAD 
        ] }

  points/clean: 
    whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN) ] }

  points/import: 
    whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN) ] }

  points/get:
    whitelist: >-
      ${ [ 
        ...getValuesRecursive(ROLES.ADMIN), 
        ROLES.PILLAR_STAFF, 
        ROLES.THE_TRADES,
        ROLES.STAFF.GUHUA_GUIDE 
      ] }
#
#   # Its possible to set permissions for custom commands
#   echo:
#     whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN) ] }
#
#   # Its possible to set permissions for custom commands in folders
#   characters/amber:
#     whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN) ] }


# Only delete stuff after this line if you know what you're doing.
modules:
  userNotes:
    enabled: true
    permissions:
      whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN), ...getValuesRecursive(ROLES.MOD) ] }

  pointsSystem:
    enabled: true
    permissions:
      whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN), ROLES.VERIFIED ] }
        
    loggingChannel: "${ CHANNELS.BOT_LOGGING }"
    
  vanityRoles:
    enabled: true

    # Who can use the /vanityrole command, anyone with MANAGE_ROLES if not set.
    permissions:
      whitelist:
        - "${ ROLES.PATREON_ARCHON }"
        - "${ ROLES.PATREON_ADEPTUS }"

    # Log whenever someone's custom role is updated
    loggingChannel: "${ CHANNELS.BOT_LOGGING }"

    createRoleAfter: "${ ROLES.PATREON_ADEPTUS }"

  reactRoles:
    enabled: true

    # Who can use the /reactroles command, anyone with MANAGE_ROLES if not set.
    permissions:
      whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN), ...getValuesRecursive(ROLES.EMISSARY) ] }

    configs:
      # randomRole:
      #   title: "Get a random role"
      #   description: |-
      #     Get a random role out of <@&947365141450727495>, <@&947356633737080853>, and <@&947356702318153749>

      #   permissions:
      #     blacklist:
      #       - "947365141450727495"
      #       - "947356633737080853"
      #       - "947356702318153749"
          
      #   reactions:
      #     "pe:946999484175491102":
      #       role: >
      #         ${
      #           const reactionRoles = [
      #             "947365141450727495",
      #             "947356633737080853",
      #             "947356702318153749"
      #           ];

      #           reactionRoles[Math.floor(Math.random() * reactionRoles.length)];
      #         }
      #       description: "Random Role"

      keqkey:
        title: "Keqing's Key"
        color: ${ COLORS.ELECTRO_PURPLE }
        description:
        permissions:
          whitelist: >- 
            ${ [ 
              ...getValuesRecursive(ROLES.ADMIN), 
              ROLES.EMISSARY, 
              ROLES.HEAD_MILLELITH, 
              ROLES.HONORARY_QIXING,
              ROLES.VICE_HEAD_MILLELITH,
              ROLES.PILLAR_HEAD,
              ROLES.PILLAR_VICE_HEAD
            ] }

        reactions:
          "love:767201369525321758":
            role: "${ ROLES.ADMIN.KEQINGS_KEY }"
            description: ":key: Break glass in case of emergency."

      main:
        image: "https://cdn.discordapp.com/attachments/810941835949244447/811264667867414558/unknown.png"
        title: "Would you be interested in extended car insurance?"
        description: |-
          It would benefit you in the long term if you opted-in for out Extended Car Insurance:tm:. We cover everything from your car being blown up by the local gang to Russian troops commandeering your vehicle.

          *For full coverage terms please read our [Terms of Service](https://www.youtube.com/watch?v=dQw4w9WgXcQ)*

        # Who can get these roles
        permissions:
          whitelist:
            - "${ ROLES.VERIFIED }"

        reactions:
          # REACTION EMOJI ID: ROLE
          "pe:946999484175491102":
            role: "945554661413367819"
            description: "Yes"

          "based:945928754973270067":
            role: "945554661413367819"
            description: "Absolutely"

      # TC Readme Reacts
      theoryreadme:
        image: "https://cdn.discordapp.com/attachments/763589418086432778/813379829151301642/GI_-_KQM_2.png"
        title: "Theorycrafting Section Roles"
        color: ${ COLORS.ELECTRO_PURPLE }
        description: |-
          React with the matching emoji for specific roles
        permissions:
          whitelist:
            - "${ ROLES.VERIFIED }"

        reactions:
          # REACTION EMOJI ID: ROLE
          "KeqingThink:1027399545430212671":
            role: "${ ROLES.THEORYCRAFTER }"
            description: "<@&${ ROLES.THEORYCRAFTER }>: Access to the TC Section"

          "keqnote:838482574644346931":
            role: "${ ROLES.LIBRARY_SUBMISSIONS }"
            description: "<@&${ ROLES.LIBRARY_SUBMISSIONS }>: Access to the TC Tickets"

          "keqingPain:854599966432559154":
            role: "${ ROLES.GUIDE_SUBMISSIONS }"
            description: "<@&${ ROLES.GUIDE_SUBMISSIONS }>: Access to Guide Tickets"

          "KeqSalute:1021891784713969715":
            role: "${ ROLES.THEORYHUNTER }"
            description: "<@&${ ROLES.THEORYHUNTER }>: Be notified when a theoryhunt is posted"

          "madamePING:776287232579207198":
            role: "${ ROLES.TC_PING }"
            description: "<@&${ ROLES.TC_PING }>: Be notified about important TC announcements"

      theoryreadme2:
        title: "Guide & Calc Verification"
        color: ${ COLORS.ELECTRO_PURPLE }
        description: |-
          React to be pinged for Guide or Calc Verifications (available to TC Staff & <@&${ ROLES.WANGSHENG_THEORYCRAFTER }>).

          *You will be pinged in Guide Tickets when they are ready to be verified.*
        permissions:
          whitelist: >- 
            ${ [ 
              ...getValuesRecursive(ROLES.ADMIN), 
              ROLES.WANGSHENG_THEORYCRAFTER, 
              ROLES.STAFF.TC_STAFF,
              ROLES.STAFF.WANGSHENG_EDITOR, 
              ROLES.STAFF.WANGSHENG_SCHOLAR, 
              ROLES.STAFF.WANGSHENG_MONKE,
              ROLES.STAFF.WFP_TC_STAFF,
              ROLES.STAFF.WANGSHENG_ASST_EDITOR,
              ROLES.WANGSHENG_DIRECTOR, 
              ROLES.WANGSHENG_ASST_DIRECTOR
            ] }
        reactions:

          "keqisee:776297817438289920":
            role: "${ ROLES.GUIDE_VERIFICATION }"
            description: "<@&${ ROLES.GUIDE_VERIFICATION }>: Gives you the Guide Verification Role"   
    
          "KeqingSparkle:779046540408127521":
            role: "${ ROLES.CALC_VERIFICATION }"
            description: "<@&${ ROLES.CALC_VERIFICATION }>: Gives you the Calc Verification Role"     

      guidesubmissionreactrole:
        title: "Guide Submissions React Role"
        color: ${ COLORS.ELECTRO_PURPLE }
        description: |-
          Optional react role to see guide tickets. If you are interested in guide work, you will find tickets for ongoing guide projects. 

        permissions:
          whitelist:
            - "${ ROLES.VERIFIED }"

        reactions:
          # REACTION EMOJI ID: ROLE

          "keqingflower:1049870812796178442":
            role: "${ ROLES.GUIDE_SUBMISSIONS }"
            description: "<@&${ ROLES.GUIDE_SUBMISSIONS }>: Gives you the Guide Verification Role which provides access to Guide Channels."  
         
      # Offtopic React Role
      offtopicreactrole:
        title: "Get access to the Offtopic part of KQM"
        color: ${ COLORS.ELECTRO_PURPLE }
        description: |-
          React with the matching emoji for specific roles
        permissions:
          whitelist:
            - "${ ROLES.VERIFIED }"

        reactions:
          # REACTION EMOJI ID: ROLE
          "morapls:770223616112853024":
            role: "${ ROLES.OFFTOPIC }"
            description: "<@&${ ROLES.OFFTOPIC }>: Access to all of Offtopic"

      # Feiyun React Role
      feiyunreact:
        title: "Feiyun React Roles"
        color: ${ COLORS.ELECTRO_PURPLE }
        description: |-
          React with the matching emoji for specific roles
        permissions:
          whitelist:
            - "${ ROLES.STAFF.FEIYUN_FILM_CREW }"

        reactions:
          # REACTION EMOJI ID: ROLE
          "üéûÔ∏è":
            role: "${ ROLES.STAFF.FEIYUN_FILM_VIDEO_EDITOR }"
            description: "<@&${ ROLES.STAFF.FEIYUN_FILM_VIDEO_EDITOR }>: Role for Video Editor"

          "‚å®Ô∏è":
            role: "${ ROLES.STAFF.FEIYUN_FILM_SCRIPT_WRITER }"
            description: "<@&${ ROLES.STAFF.FEIYUN_FILM_SCRIPT_WRITER }>: Role for Script Writer"

          "üî≠":
            role: "${ ROLES.STAFF.FEIYUN_FILM_CONTENT_QC }"
            description: "<@&${ ROLES.STAFF.FEIYUN_FILM_CONTENT_QC }>: Role for Content QC"

          "üîç":
            role: "${ ROLES.STAFF.FEIYUN_FILM_VIDEO_QC }"
            description: "<@&${ ROLES.STAFF.FEIYUN_FILM_VIDEO_QC }>: Role for Video QC"

          "üî¨":
            role: "${ ROLES.STAFF.FEIYUN_FILM_GRAMMAR_QC }"
            description: "<@&${ ROLES.STAFF.FEIYUN_FILM_GRAMMAR_QC }>: Role for Grammar QC"

          "üì∑":
            role: "${ ROLES.STAFF.FEIYUN_FILM_RECORDER }"
            description: "<@&${ ROLES.STAFF.FEIYUN_FILM_RECORDER }>: Role for Recorder"

          "üéôÔ∏è":
            role: "${ ROLES.STAFF.FEIYUN_FILM_VOICEOVER }"
            description: "<@&${ ROLES.STAFF.FEIYUN_FILM_VOICEOVER }>: Role for Voiceover"          

            
      # Directory Reacts
      reactrolesnotification:
        image: "https://cdn.discordapp.com/attachments/954233449953234964/958172135996686356/kqm_notification_roles.png"
        title: "„Éª                                       Notifications                                      „Éª"
        color: ${ COLORS.ELECTRO_PURPLE }
        description: |-
          React with the matching emoji for the pings you are interested in.
        permissions:
          whitelist:
            - "${ ROLES.VERIFIED }"

        reactions:
          "madamePING:776287232579207198":
            role: "${ ROLES.ALERT_ANNOUNCEMENTS }"
            description: "Important server announcements"

          "üèüÔ∏è":
            role: "${ ROLES.ALERT_TRUSTED_CREATORS }"
            description: "Trusted Creators release content"

          "twitch:956835761745956876":
            role: "${ ROLES.ALERT_TWITCH }"
            description: "KQM Twitch goes live\n"

          "primogem:768816635120713769":
            role: "${ ROLES.ALERT_CODES }"
            description: "Primogem redeem codes are released."

          "üéüÔ∏è":
            role: "${ ROLES.ALERT_GIVEAWAYS }"
            description: "Giveaways (skins, Welkins, BPs, and more!)."
            
          "KeqParty:805672780606734347":
            role: ${ ROLES.EVENTS_KITTEN }
            description: "Server events, including karaoke, game nights & more!"

          "yaetcg:1066298575463649290":
            role: "${ ROLES.ALERT_TCG }"
            description: "GI TCG Events & Announcements"

          "webevents:1035763039644942386":
            role: "${ ROLES.ALERT_WEB_EVENTS }"
            description: "A new Genshin Web Event is released.\n**„Éª   Daily Alerts   „Éª**\nReact below for daily game alerts.\n"

          "üü•":
            role: "${ ROLES.ALERT_DAILY_ASIA }"
            description: "Dailies Alert - Asia and SAR Servers"

          "üü¶":
            role: "${ ROLES.ALERT_DAILY_AMERICA }"
            description: "Dailies Alert - America Server"

          "üü´":
            role: "${ ROLES.ALERT_DAILY_EUROPE }"
            description: "Dailies Alert - Europe Server"

      reactrolesregions:
        image: "https://cdn.discordapp.com/attachments/954233449953234964/958172136613240892/kqm_region_roles.png"
        title: "„Éª                                       Coop Roles                                      „Éª"
        color: ${ COLORS.ELECTRO_PURPLE }
        description: |-
          React here to show others in coop-chat your server. React to LFG if you would like to access the global Katheryne Coop Bot.
        permissions:
          whitelist:
            - "${ ROLES.VERIFIED }"

        reactions:
          "üü©":
            role: "${ ROLES.LFG }"
            description: "LFG - Access to #coop-chat\n"

          "üü•":
            role: "${ ROLES.REGION_ASIA }"
            description: "Asia Server"

          "üü¶":
            role: "${ ROLES.REGION_AMERICA }"
            description: "America Server"

          "üü´":
            role: "${ ROLES.REGION_EUROPE }"
            description: "Europe Server"

          "üü®":
            role: "${ ROLES.REGION_TWHKMO }"
            description: "TW/HK/MO Server"

      reactrolescategory:
        image: "https://cdn.discordapp.com/attachments/954233449953234964/958172135791149076/kqm_category_roles.png"
        title: "„Éª                                       Categories                                      „Éª"
        color: ${ COLORS.ELECTRO_PURPLE }
        description: |-
          React here to unlock the respective channels in the server.
        permissions:
          whitelist:
            - "${ ROLES.VERIFIED }"

        reactions:
          "üñºÔ∏è":
            role: "${ ROLES.MEDIA }"
            description: "Media *(Visible by default)*"

          "üü£":
            role: "${ ROLES.LEWD }"
            description: "Lewd (18+ only)\n\n‚ûú For access to the theorycrafting category, react in <#939411507127668758>."

      reactrolespronoun:
        image: "https://cdn.discordapp.com/attachments/954233449953234964/958172136365752380/kqm_pronoun_roles.png"
        title: "„Éª                                       Pronouns                                      „Éª"
        color: ${ COLORS.ELECTRO_PURPLE }
        permissions:
          whitelist:
            - "${ ROLES.VERIFIED }"

        reactions:
          "üü¶":
            role: "${ ROLES.PRONOUN_M }"
            description: "He/Him"

          "üü•":
            role: "${ ROLES.PRONOUN_F }"
            description: "She/Her"

          "üü™":
            role: "${ ROLES.PRONOUN_T }"
            description: "They/Them"

          "üü©":
            role: "${ ROLES.PRONOUN_ASK }"
            description: "Ask for Pronouns"

      # Events Ping
      reactroleevents:
        title: "React for Events!"
        color: ${ COLORS.ELECTRO_PURPLE }

        reactions:
          "KeqParty:805672780606734347":
            role: ${ ROLES.EVENTS_KITTEN }
            description: "<@&${ ROLES.EVENTS_KITTEN }>: React here if you want to be notified about future events, including karaoke, game nights & more!"

      # NSFW Staff channel
      reactrolestaffnsfw:
        title: "Staff NSFW Channel Access 18+ Only"
        color: ${ COLORS.ELECTRO_PURPLE }

        reactions:
          "kikin:959474754971127819":
            role: ${ ROLES.STAFF.STAFF_LEWD }
            description: "<@&${ ROLES.STAFF.STAFF_LEWD }>"
        
      #staff:
      #  image: "https://cdn.discordapp.com/attachments/945321873418362880/953178188639531078/unknown.png"
      #  title: "Emergency Staff Allocation"
      #  description: |-
      #    This command should only be able to be used by staff. Please gather roles that you think you were missing. Abuse of this command will be punished.
      #  # Literally ALL staff roles
      #  permissions:
      #    whitelist:
      #      - "${ ROLES.STAFF }"
      #      - "${ ROLES.PILLAR_STAFF }"
      #
      #  reactions:
      #    # REACTION EMOJI ID: ROLE
      #    "kapetayo:904967085170491412":
      #      role: "${ ROLES.PILLAR_STAFF }"
      #      description: "Pillar Staff"

            
  modMail:
    enabled: true

    # This restricts who can open a thread. If this is not set, anyone can open a thread by DMing the bot
    #permissions:
    #  whitelist:
    #    - "${ ROLES.VERIFIED }"

    #ignoreRole: "${ ROLES.MODMAIL_IGNORED }"

    channels:
      logging: "${ CHANNELS.MODMAIL_LOGGING }"
      threads: "${ CHANNELS.MODMAIL_THREADS }"

  # Role kits
  roleKits:
    enabled: true

    # This restricts who can use the /rolekits command. if its not set, anyone with the MANAGE_ROLES permission can use the command.
    permissions: 
      whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN), ROLES.PILLAR_STAFF, ROLES.THE_TRADES, ROLES.STAFF.WANGSHENG_SCHOLAR, ROLES.STAFF.WANGSHENG_EDITOR, ROLES.VERIFIED ] }

    # The kits that are available
    kits:
    
      hiatus:
        exportAsCommand: true
        name: Hiatus
        permissions: 
          whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN), ROLES.PILLAR_HEAD, ROLES.PILLAR_VICE_HEAD ] }
        addRoles:
          - "${ ROLES.HIATUS }"
        removeRoles:
          - "${ ROLES.STAFF.YUEHAI_LEAKS_WHISPERER }"
          - "${ ROLES.STAFF.WANWEN_LORE_RESEARCHER }"
          - "${ ROLES.STAFF.TC_STAFF }"
          - "${ ROLES.STAFF.WANGSHENG_EDITOR }"
          - "${ ROLES.STAFF.WANGSHENG_SCHOLAR }"
          - "${ ROLES.STAFF.WANGSHENG_MONKE }"
          - "${ ROLES.STAFF.WFP_TC_STAFF }"
          - "${ ROLES.STAFF.WANGSHU_INN }"
          - "${ ROLES.STAFF.QINGCE_ART_CURATOR }"
          - "${ ROLES.STAFF.GUHUA_GUIDE }"
          - "${ ROLES.STAFF.GUHUA_STUDENT }"
          - "${ ROLES.STAFF.GUHUA_SCRIBE }"
          - "${ ROLES.STAFF.LIVESTREAM_TEAM }"
          - "${ ROLES.STAFF.JADE_PALACE_SECRETARY }"
          - "${ ROLES.STAFF.FEIYUN_FILM_CREW }"
          - "${ ROLES.STAFF.FEIYUN_FILM_VIDEO_EDITOR }"
          - "${ ROLES.STAFF.FEIYUN_FILM_SCRIPT_WRITER }"
          - "${ ROLES.STAFF.FEIYUN_FILM_CONTENT_QC }"
          - "${ ROLES.STAFF.FEIYUN_FILM_VIDEO_QC }"
          - "${ ROLES.STAFF.FEIYUN_FILM_GRAMMAR_QC }"
          - "${ ROLES.STAFF.FEIYUN_FILM_RECORDER }"
          - "${ ROLES.STAFF.FEIYUN_FILM_VOICEOVER }"
          - "${ ROLES.STAFF.GUHUA_ADVENTURER }"
          - "${ ROLES.STAFF.DIHUA }"
          - "${ ROLES.STAFF.YANSHANG_TEAHOUSE_STAFF }"
          - "${ ROLES.STAFF.JADE_PALACE }"
          - "${ ROLES.STAFF.CRUX_ARTIST }"
          - "${ ROLES.STAFF.CRUX_DESIGNER }"
          - "${ ROLES.MANAGING_EDITOR }"
          - "${ ROLES.STAFF.WANGSHENG_ASST_EDITOR }"
          - "${ ROLES.MOD.MILLELITH }"
          - "${ ROLES.MOD.SAL_TERRAE_SUBREDDIT }"


      wangshengcoffin:
        exportAsCommand: true
        name: Wangsheng Coffin
        permissions: 
          whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN), ROLES.MOD.MILLELITH, ROLES.MOD.WANGSHENG, ROLES.WANGSHENG_DIRECTOR, ROLES.WANGSHENG_ASST_DIRECTOR ] }
        addRoles:
          - "${ ROLES.WANGSHENG_COFFIN }"
        removeRoles:
          - "${ ROLES.THEORYCRAFTER }"
          - "${ ROLES.THEORYHUNTER }"
          - "${ ROLES.LIBRARY_SUBMISSIONS }"
          - "${ ROLES.GUIDE_SUBMISSIONS }"

      removewangshengcoffin:
        exportAsCommand: true
        name: Remove Wangsheng Coffin
        permissions: 
          whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN), ROLES.MOD.MILLELITH, ROLES.MOD.WANGSHENG, ROLES.WANGSHENG_DIRECTOR, ROLES.WANGSHENG_ASST_DIRECTOR ] }
        removeRoles:
          - "${ ROLES.WANGSHENG_COFFIN }"
      

      guhuacoffin:
        exportAsCommand: true
        name: Guhua Exile
        permissions: 
          whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN), ROLES.MOD.MILLELITH, ROLES.MOD.GUHUA, ROLES.GUHUA_GUIDE_GRANDMASTER ] }
        addRoles:
          - "${ ROLES.GUHUA_EXILE }"

      removeguhuacoffin:
        exportAsCommand: true
        name: Remove Guhua Exile
        permissions: 
          whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN), ROLES.MOD.MILLELITH, ROLES.MOD.GUHUA, ROLES.GUHUA_GUIDE_GRANDMASTER ] }
        removeRoles:
          - "${ ROLES.GUHUA_EXILE }"

      offtopiccoffin:
        exportAsCommand: true
        name: Offtopic Coffin
        permissions: 
          whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN), ROLES.MOD.MILLELITH, ROLES.YUEHAI_LEAKS_HEAD ] }
        addRoles:
          - "${ ROLES.OFFTOPIC_COFFIN }"
        removeRoles:
          - "${ ROLES.OFFTOPIC }"
          - "${ ROLES.OFFTOPIC_PING }"

      removeofftopiccoffin:
        exportAsCommand: true
        name: Remove Offtopic Coffin
        permissions: 
          whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN), ROLES.MOD.MILLELITH, ROLES.YUEHAI_LEAKS_HEAD ] }
        removeRoles:
          - "${ ROLES.OFFTOPIC_COFFIN }"

      contributor:
        exportAsCommand: true
        name: Wangsheng Contributor
        permissions:
          whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN), ROLES.STAFF.WANGSHENG_SCHOLAR, ROLES.STAFF.WANGSHENG_EDITOR, ROLES.WANGSHENG_DIRECTOR, ROLES.WANGSHENG_ASST_DIRECTOR] }
        addRoles:
          - "${ ROLES.WANGSHENG_CONTRIBUTOR }"
          
      theoryhunter:
        exportAsCommand: true
        name: Wangsheng Theoryhunter
        permissions:
          whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN), ROLES.STAFF.WANGSHENG_SCHOLAR, ROLES.STAFF.WANGSHENG_EDITOR, ROLES.WANGSHENG_DIRECTOR, ROLES.WANGSHENG_ASST_DIRECTOR ] }
        addRoles:
          - "${ ROLES.WANGSHENG_THEORYHUNTER }"

      theorycrafter:
        exportAsCommand: true
        name: Wangsheng Theorycrafter
        permissions:
          whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN), ROLES.WANGSHENG_DIRECTOR, ROLES.WANGSHENG_ASST_DIRECTOR ] }
        addRoles:
          - "${ ROLES.WANGSHENG_THEORYCRAFTER }"

      whale:
        exportAsCommand: true
        name: WhaleBTW
        permissions:
          whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN) ] }
        addRoles:
          - "${ ROLES.WHALEBTW }"

      kqm:
        exportAsCommand: true
        name: KeqingMain
        permissions:
          whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN) ] }
        addRoles:
          - "${ ROLES.KEQINGMAIN }"

  # Verification Module
  verification:
    enabled: true

    # This restricts who can use the /verification command. if its not set, anyone can use the command.
    permissions:
      whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN) ] }

    # This sets the channel to use for sending the initialMessage into. If this is not set then the bot will not automatically send the welcome message.
    # welcomeChannel: "${  CHANNELS.WELCOME  }"

    # The role to add to users when they successfully accept the rules.
    verifiedRole: 
      - "${ ROLES.VERIFIED }"
      - "${ ROLES.MEDIA }"

    interactions:
      # You can use this to set a different greeting message. If this is not set then initialMessage is used.
      greetingsMessageInteractionPath: "verification/initial_message"

      # The initial message displayed when the /verification is run.
      initialMessageInteractionPath: "verification/initial_message"

      # The interaction to display when the user presses the verification button.
      rulesAcknowledgementInteractionPath: "verification/rules_acknowledgement"

    # Verification button settings
    button:
      title: "Verify"
      type: "PRIMARY"

  supportThreads:
    enabled: true

    # This restricts who can use the /supportthreads command. if its not set, anyone with MANAGE_THREADS permission can use the command.
    permissions:
      whitelist: ${ [ ...getValuesRecursive(ROLES.ADMIN) ] }

    configs:
      main:
        # The interaction to display when the command is run.
        displayInteractionPath: "verification/arte_test"

        # The interaction to display when someone interacts with the supportThreadButton
        supportThreadConfirmationInteractionPath: "verification/arte_test"

        # The interaction to send in the opened thread
        supportThreadDisplayInteractionPath: "verification/arte_test"

        # The channel to open the thread in
        supportThreadChannel: "945738093766533140"

        # Configure the button to open a support thread, if this is not set then a button with the label "HELP" is used
        supportThreadButton:
          title: "HELP"
          type: "PRIMARY"

        # Interaction to display when the user clicks the troubleshootButton
        troubleshootInteractionPath: "verification/arte_test"

        # An optional button that displays an interaction upon clicking. if this is not set, no button is displayed
        troubleshootButton:
          title: "TROUBLESHOOT"
          type: "SUCCESS"

      guhuafeedback:
        # The interaction to display when the command is run.
        displayInteractionPath: "verification/guhua_feedback"

        # The interaction to display when someone interacts with the supportThreadButton
        supportThreadConfirmationInteractionPath: "verification/guhua_feedback_confirmation"

        # The interaction to send in the opened thread
        supportThreadDisplayInteractionPath: "verification/guhua_feedback_thread"

        # The channel to open the thread in
        supportThreadChannel: "${ CHANNELS.GUHUA_FEEDBACK }"

        # Configure the button to open a support thread, if this is not set then a button with the label "HELP" is used
        supportThreadButton:
          title: "Leave Feedback"
          type: "PRIMARY"

