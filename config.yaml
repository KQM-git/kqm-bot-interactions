# override permissions for any command
permissions:
#   # Its possible to set permissions for internal commands too.
#   role:
#     whitelist:
#       - "${ ROLES.MODERATOR }"
#
#   # Its possible to set permissions for custom commands
#   echo:
#     whitelist:
#       - "${ ROLES.MODERATOR }"
#
#   # Its possible to set permissions for custom commands in folders
#   characters/amber:
#     whitelist:
#       - "${ ROLES.MODERATOR }"

# Only delete stuff after this line if you know what you're doing.
modules:
  modMail:
    enabled: false
    
    # This restricts who can open a thread. If this is not set, anyone can open a thread by DMing the bot
    permission: "${ ROLES.VERIFIED }"
    
    ignoreRole: "${ ROLES.MODMAIL_IGNORED }"
    
    channels:
      logging: "${ CHANNELS.MODMAIL.LOGGING }"
      threads: "${ CHANNELS.MODMAIL.THREADS }"

  # Role kits
  roleKits:
    enabled: true

    # This restricts who can use the /rolekits command. if its not set, anyone with the MANAGE_ROLES permission can use the command.
    permission: 
      - "${ ROLES.PILLAR_STAFF }"
      - "${ ROLES.THE_TRADES }"
      - "${ ROLES.WANGSHENG_SCHOLAR }"
      - "${ ROLES.WANGSHENG_EDITOR }"
   
    # The kits that are available
    kits:  
      wangshengCoffin:
        name: Wangsheng Coffin
        permissions: 
          whitelist:
            - "${ ROLES.MOD_WANGSHENG }"
            - "${ ROLES.WANGSHENG_DIRECTOR }"
            - "${ ROLES.WANGSHENG_ASST_DIRECTOR }"
        addRoles:
          - "${ ROLES.WANGSHENG_COFFIN } "
        removeRoles:
          - "${ ROLES.THEORYCRAFTER }"
          - "${ ROLES.THEORYHUNTER }"
          - "${ ROLES.LIBRARY_SUBMISSIONS }"
          - "${ ROLES.GUIDE_SUBMISSIONS }"

      guhuaCoffin:
        name: Guhua Exile
        permissions: 
          whitelist: 
            - "${ ROLES.MOD_GUHUA }"
            -  ${ ROLES.GUHUA_GUIDE_GRANDMASTER }"
        addRoles:
          - "${ ROLES.GUHUA_EXILE } "
        removeRoles:

      leaksCoffin:
        name: Leaky Coffin
        permissions: 
          whitelist: 
            - "${ ROLES.MOD_LEAKS }"
            - "${ ROLES.YUEHAI_LEAKS_HEAD }"
        addRoles:
          - "${ ROLES.LEAKY_COFFIN }"
        removeRoles:
          - "${ ROLES.LEAKS }"
          - "${ ROLES.LEAKS_PING }"
      
      contributor:
        name: Wangsheng Contributor
        permissions:
          whitelist:
            - "${ ROLES.WANGSHENG_SCHOLAR }"
            - "${ ROLES.WANGSHENG_EDITOR }"
            - "${ ROLES.WANGSHENG_DIRECTOR }"
            - "${ ROLES.WANGSHENG_ASST_DIRECTOR }"
        addRoles:
          - "${ ROLES.WANGSHENG_CONTRIBUTOR }"
          
      contributor:
        name: Wangsheng Theoryhunter
        permissions:
          whitelist:
            - "${ ROLES.WANGSHENG_SCHOLAR }"
            - "${ ROLES.WANGSHENG_EDITOR }"
            - "${ ROLES.WANGSHENG_DIRECTOR }"
            - "${ ROLES.WANGSHENG_ASST_DIRECTOR }"
        addRoles:
          - "${ ROLES.WANGSHENG_THEORYHUNTER }"

      contributor:
        name: Wangsheng Theorycrafter
        permissions:
          whitelist:
            - "${ ROLES.WANGSHENG_SCHOLAR }"
            - "${ ROLES.WANGSHENG_EDITOR }"
            - "${ ROLES.WANGSHENG_DIRECTOR }"
            - "${ ROLES.WANGSHENG_ASST_DIRECTOR }"
        addRoles:
          - "${ ROLES.WANGSHENG_THEORYCRAFTER }"
          
  # Verification Module
  verification:
    enabled: true
    
    # This restricts who can use the /verification command. if its not set, anyone can use the command.
    permission: "${  ROLES.MODERATOR  }"
    
    # This sets the channel to use for sending the initialMessage into. If this is not set then the bot will not automatically send the welcome message.
    welcomeChannel: "${  CHANNELS.WELCOME  }"
  
    # The role to add to users when they successfully accept the rules.
    verifiedRole: "${  ROLES.VERIFIED  }"
    
    interactions:
      # You can use this to set a different greeting message. If this is not set then initialMessage is used.
      greetingsMessageInteractionPath: "verification/initial_message"
      
      # The initial message displayed when the /verification is run.
      initialMessageInteractionPath: "verification/initial_message"
      
      # The interaction to display when the user presses the verification button.
      rulesAcknowledgementInteractionPath: "verification/rules_acknowledgement"
    
    # Verification button settings
    button:
      title: "Verify"
      type: "PRIMARY"
      
      
  supportThreads:
    enabled: false
    
    # This restricts who can use the /supportthreads command. if its not set, anyone with MANAGE_THREADS permission can use the command.
    permission: "${  ROLES.MODERATOR  }"
    
    configs:
      main:
        # The interaction to display when the command is run.
        displayInteractionPath: "verification/arte_test"
        
        # The interaction to display when someone interacts with the supportThreadButton
        supportThreadConfirmationInteractionPath: "verification/arte_test"
        
        # The interaction to send in the opened thread
        supportThreadDisplayInteractionPath: "verification/arte_test"
        
        # The channel to open the thread in
        supportThreadChannel: "${  CHANNELS.SUPPORT  }"
        
        # Configure the button to open a support thread, if this is not set then a button with the label "HELP" is used
        supportThreadButton:
          title: "HELP"
          type: "PRIMARY"
          
        # Interaction to display when the user clicks the troubleshootButton
        troubleshootInteractionPath: "verification/arte_test"
        
        # An optional button that displays an interaction upon clicking. if this is not set, no button is displayed
        troubleshootButton:
          title: "TROUBLESHOOT"
          type: "SUCCESS"



